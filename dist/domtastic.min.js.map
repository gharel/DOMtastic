{"version":3,"file":"domtastic.min.js","sources":["../src/util.js","../src/selector/index.js","../src/array.js","../src/baseClass.js","../src/css.js","../src/dom/attr.js","../src/dom/class.js","../src/dom/contains.js","../src/dom/data.js","../src/dom/index.js","../src/dom/extra.js","../src/dom/html.js","../src/selector/closest.js","../src/event/index.js","../src/event/ready.js","../src/event/trigger.js","../src/selector/extra.js","../src/type.js","../src/index.js"],"sourcesContent":["/**\n * @module Util\n */\n\n/**\n * Reference to the window object\n * @private\n */\n\nexport const win = typeof window !== 'undefined' ? window : {};\n\n/**\n * Convert `NodeList` to `Array`.\n *\n * @param {NodeList|Array} collection\n * @return {Array}\n * @private\n */\n\nexport const toArray = (collection) => {\n\tconst length = collection.length;\n\tconst result = new Array(length);\n\tfor (let i = 0; i < length; i++) {\n\t\tresult[i] = collection[i];\n\t}\n\treturn result;\n};\n\n/**\n * Faster alternative to [].forEach method\n *\n * @param {Node|NodeList|Array} collection\n * @param {Function} callback\n * @return {Node|NodeList|Array}\n * @private\n */\n\nexport const each = (collection, callback, thisArg) => {\n\tconst length = collection.length;\n\tif (length !== undefined && collection.nodeType === undefined) {\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tcallback.call(thisArg, collection[i], i, collection);\n\t\t}\n\t} else {\n\t\tcallback.call(thisArg, collection, 0, collection);\n\t}\n\treturn collection;\n};\n\n/**\n * Assign enumerable properties from source object(s) to target object\n *\n * @method extend\n * @param {Object} target Object to extend\n * @param {Object} [source] Object to extend from\n * @return {Object} Extended object\n * @example\n *     $.extend({a: 1}, {b: 2}); // {a: 1, b: 2}\n * @example\n *     $.extend({a: 1}, {b: 2}, {a: 3}); // {a: 3, b: 2}\n */\n\nexport const extend = (target, ...sources) => {\n\tsources.forEach((src) => {\n\t\tfor (const prop in src) {\n\t\t\ttarget[prop] = src[prop];\n\t\t}\n\t});\n\treturn target;\n};\n\n/**\n * Return the collection without duplicates\n *\n * @param collection Collection to remove duplicates from\n * @return {Node|NodeList|Array}\n * @private\n */\n\nexport const uniq = (collection) => collection.filter((item, index) => collection.indexOf(item) === index);\n\n/**\n * Check if touch device\n *\n * @return {Boolean}\n */\n\nexport const isTouch = () => Boolean('ontouchstart' in window);\n\n/**\n * Check if mobile with media queries\n *\n * @param width Width under that mobile is true\n * @return {Boolean}\n */\n\nexport const isMobileByMQ = (width) => 'matchMedia' in window && window.matchMedia(`(max-width:${width}px)`).matches;\n","/**\n * @module Selector\n */\n\nimport { each, win } from '../util';\n\nlet isPrototypeSet = false;\n\nconst reFragment = /^\\s*<(\\w+|!)[^>]*>/;\nconst reSingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/;\nconst reSimpleSelector = /^[.#]?[\\w-]*$/;\n\n/**\n * Versatile wrapper for `querySelectorAll`.\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @param {String|Node|NodeList} context=document The context for the selector to query elements.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     var $items = $(.items');\n * @example\n *     var $element = $(domElement);\n * @example\n *     var $list = $(nodeList, document.body);\n * @example\n *     var $element = $('<p>evergreen</p>');\n */\n\nconst domtastic = function domtastic(selector, context = document) {\n\tlet collection;\n\n\tif (!selector) {\n\t\tcollection = document.querySelectorAll(null);\n\t} else if (selector instanceof DOMtastic) {\n\t\treturn selector;\n\t} else if (typeof selector !== 'string') {\n\t\tcollection = selector.nodeType || selector === window ? [selector] : selector;\n\t} else if (reFragment.test(selector)) {\n\t\tcollection = createFragment(selector);\n\t} else {\n\t\tcontext = typeof context === 'string' ? document.querySelector(context) : context.length ? context[0] : context;\n\t\tcollection = querySelector(selector, context);\n\t}\n\n\treturn wrap(collection);\n};\n\nexport const $ = domtastic;\n\n/**\n * Find descendants matching the provided `selector` for each element in the collection.\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @return {Object} The wrapped collection\n * @example\n *     $('.selector').find('.deep').$('.deepest');\n */\n\nexport const find = function (selector) {\n\tconst nodes = [];\n\teach(this, (node) => each(querySelector(selector, node), (child) => {\n\t\tif (nodes.indexOf(child) === -1) {\n\t\t\tnodes.push(child);\n\t\t}\n\t}));\n\treturn $(nodes);\n};\n\n/**\n * Returns `true` if the element would be selected by the specified selector string; otherwise, returns `false`.\n *\n * @param {Node} element Element to test\n * @param {String} selector Selector to match against element\n * @return {Boolean}\n *\n * @example\n *     $.matches(element, '.match');\n */\n\nexport const matches = (() => {\n\tconst context = typeof Element !== 'undefined' ? Element.prototype : win;\n\tconst _matches = context.matches || context.matchesSelector || context.mozMatchesSelector || context.msMatchesSelector || context.oMatchesSelector || context.webkitMatchesSelector;\n\treturn (element, selector) => _matches.call(element, selector);\n})();\n\n/**\n * Use the faster `getElementById`, `getElementsByClassName` or `getElementsByTagName` over `querySelectorAll` if possible.\n *\n * @private\n * @param {String} selector Query selector.\n * @param {Node} context The context for the selector to query elements.\n * @return {Object} NodeList, HTMLCollection, or Array of matching elements (depending on method used).\n */\n\nconst querySelector = (selector, context) => {\n\tconst isSimpleSelector = reSimpleSelector.test(selector);\n\n\tif (isSimpleSelector) {\n\t\tif (selector[0] === '#') {\n\t\t\tconst element = (context.getElementById ? context : document).getElementById(selector.slice(1));\n\t\t\treturn element ? [element] : [];\n\t\t}\n\t\tif (selector[0] === '.') {\n\t\t\treturn context.getElementsByClassName(selector.slice(1));\n\t\t}\n\t\treturn context.getElementsByTagName(selector);\n\t}\n\n\treturn context.querySelectorAll(selector);\n};\n\n/**\n * Create DOM fragment from an HTML string\n *\n * @private\n * @param {String} html String representing HTML.\n * @return {NodeList}\n */\n\nconst createFragment = (html) => {\n\tif (reSingleTag.test(html)) {\n\t\treturn [document.createElement(RegExp.$1)];\n\t}\n\n\tconst elements = [];\n\tconst container = document.createElement('div');\n\tconst children = container.childNodes;\n\n\tcontainer.innerHTML = html;\n\n\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\telements.push(children[i]);\n\t}\n\n\treturn elements;\n};\n\n/**\n * Calling `$(selector)` returns a wrapped collection of elements.\n *\n * @private\n * @param {NodeList|Array} collection Element(s) to wrap.\n * @return Object) The wrapped collection\n */\n\nconst wrap = (collection) => {\n\tif (!isPrototypeSet) {\n\t\tDOMtastic.prototype = $.fn;\n\t\tDOMtastic.prototype.constructor = DOMtastic;\n\t\tisPrototypeSet = true;\n\t}\n\n\treturn new DOMtastic(collection);\n};\n\n/**\n * Constructor for the Object.prototype strategy\n *\n * @constructor\n * @private\n * @param {NodeList|Array} collection Element(s) to wrap.\n */\n\nexport const DOMtastic = function DOMtastic(collection) {\n\tlet i = 0;\n\tconst length = collection.length;\n\tfor (; i < length;) {\n\t\tthis[i] = collection[i++];\n\t}\n\tthis.length = length;\n};\n","/**\n * @module Array\n */\n\nimport { $, matches } from './selector/index';\nimport { each as _each, toArray } from './util';\n\nconst ArrayProto = Array.prototype;\n\n/**\n * Checks if the given callback returns a true(-ish) value for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Boolean} Whether each element passed the callback check.\n * @example\n *     // Test whether every element in the collection has the \"active\" attribute\n *     $('.items').every(function(element) {\n *         return element.hasAttribute('active')\n *     });\n */\n\nexport const every = ArrayProto.every;\n\n/**\n * Filter the collection by selector or function, and return a new collection with the result.\n *\n * @param {String|Function} selector Selector or function to filter the collection.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Object} A new wrapped collection\n * @chainable\n * @example\n *     $('.items').filter('.active');\n * @example\n *     $('.items').filter(function(element) {\n *         return element.hasAttribute('active')\n *     });\n */\n\nexport const filter = function (selector, thisArg) {\n\tconst callback = typeof selector === 'function' ? selector : (element) => matches(element, selector);\n\treturn $(ArrayProto.filter.call(this, callback, thisArg));\n};\n\n/**\n * Execute a function for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').forEach(function(element) {\n *         element.style.color = 'evergreen';\n *     );\n */\n\nexport const forEach = function (callback, thisArg) {\n\treturn _each(this, callback, thisArg);\n};\n\nexport const each = forEach;\n\n/**\n * Returns the index of an element in the collection.\n *\n * @param {Node} element\n * @return {Number} The zero-based index, -1 if not found.\n * @example\n *     $('.items').indexOf(element); // 2\n */\n\nexport const indexOf = ArrayProto.indexOf;\n\n/**\n * Create a new collection by executing the callback for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Array} Collection with the return value of the executed callback for each element.\n * @example\n *     // Create a new array with the attribute value of each element:\n *     $('.items').map(function(element) {\n *         return element.getAttribute('name')\n */\n\nexport const map = ArrayProto.map;\n\n/**\n * Removes the last element from the collection, and returns that element.\n *\n * @return {Object} The last element from the collection.\n * @example\n *     var lastElement = $('.items').pop();\n */\n\nexport const pop = ArrayProto.pop;\n\n/**\n * Adds one or more elements to the end of the collection, and returns the new length of the collection.\n *\n * @param {Object} element Element(s) to add to the collection\n * @return {Number} The new length of the collection\n * @example\n *     $('.items').push(element);\n */\n\nexport const push = ArrayProto.push;\n\n/**\n * Apply a function against each element in the collection, and this accumulator function has to reduce it\n * to a single value.\n *\n * @param {Function} callback Function to execute on each value in the array, taking four arguments (see example).\n * @param {Mixed} initialValue Object to use as the first argument to the first call of the callback.\n * @example\n *     // Calculate the combined height of elements:\n *     $('.items').reduce(function(previousValue, element, index, collection) {\n *         return previousValue + element.clientHeight;\n *     }, 0);\n */\n\nexport const reduce = ArrayProto.reduce;\n\n/**\n * Apply a function against each element in the collection (from right-to-left), and this accumulator function has\n * to reduce it to a single value.\n *\n * @param {Function} callback Function to execute on each value in the array, taking four arguments (see example).\n * @param {Mixed} initialValue Object to use as the first argument to the first call of the callback.\n * @example\n *     // Concatenate the text of elements in reversed order:\n *     $('.items').reduceRight(function(previousValue, element, index, collection) {\n *         return previousValue + element.textContent;\n *     }, '');\n */\n\nexport const reduceRight = ArrayProto.reduceRight;\n\n/**\n * Reverses an array in place. The first array element becomes the last and the last becomes the first.\n *\n * @return {Object} The wrapped collection, reversed\n * @chainable\n * @example\n *     $('.items').reverse();\n */\n\nexport const reverse = function () {\n\treturn $(toArray(this).reverse());\n};\n\n/**\n * Removes the first element from the collection, and returns that element.\n *\n * @return {Object} The first element from the collection.\n * @example\n *     var firstElement = $('.items').shift();\n */\n\nexport const shift = ArrayProto.shift;\n\n/**\n * Checks if the given callback returns a true(-ish) value for any of the elements in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @return {Boolean} Whether any element passed the callback check.\n * @example\n *     $('.items').some(function(element) {\n *         return element.hasAttribute('active')\n *     }); // true/false\n */\n\nexport const some = ArrayProto.some;\n\n/**\n * Adds one or more elements to the beginning of the collection, and returns the new length of the collection.\n *\n * @param {Object} element Element(s) to add to the collection\n * @return {Number} The new length of the collection\n * @example\n *     $('.items').unshift(element);\n */\n\nexport const unshift = ArrayProto.unshift;\n","/**\n * @module BaseClass\n */\n\nimport { DOMtastic, $ as selector } from './selector/index';\nimport { extend } from './util';\n\nexport default function (api) {\n\t/**\n\t * Provide subclass for classes or components to extend from.\n\t * The opposite and successor of plugins (no need to extend `$.fn` anymore, complete control).\n\t *\n\t * @return {Class} The class to extend from, including all `$.fn` methods.\n\t * @example\n\t *     import { BaseClass } from  'domtastic';\n\t *\n\t *     class MyComponent extends BaseClass {\n\t *         doSomething() {\n\t *             return this.addClass('.foo');\n\t *         }\n\t *     }\n\t *\n\t *     let component = new MyComponent('body');\n\t *     component.doSomething();\n\t *\n\t * @example\n\t *     import $ from  'domtastic';\n\t *\n\t *     class MyComponent extends $.BaseClass {\n\t *         progress(value) {\n\t *             return this.attr('data-progress', value);\n\t *         }\n\t *     }\n\t *\n\t *     let component = new MyComponent(document.body);\n\t *     component.progress('ive').append('<p>enhancement</p>');\n\t */\n\n\tclass BaseClass {\n\t\tconstructor() {\n\t\t\tDOMtastic.call(this, selector(...arguments));\n\t\t}\n\t}\n\n\textend(BaseClass.prototype, api);\n\treturn BaseClass;\n}\n","/**\n * @module CSS\n */\n\nimport { each } from './util';\n\nconst isNumeric = (value) => !isNaN(parseFloat(value)) && isFinite(value);\n\nconst camelize = (value) => value.replace(/-([\\da-z])/gi, (matches, letter) => letter.toUpperCase());\n\nconst dasherize = (value) => value.replace(/([a-z\\d])([A-Z])/g, '$1-$2').toLowerCase();\n\n/**\n * Get the value of a style property for the first element, or set one or more style properties for each element in the collection.\n *\n * @param {String|Object} key The name of the style property to get or set. Or an object containing key-value pairs to set as style properties.\n * @param {String} [value] The value of the style property to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').css('padding-left'); // get\n *     $('.item').css('color', '#f00'); // set\n *     $('.item').css({'border-width': '1px', display: 'inline-block'}); // set multiple\n */\n\nexport const css = function (key, value) {\n\tlet prop;\n\tlet styleProps;\n\tlet val;\n\n\tif (typeof key === 'string') {\n\t\tkey = camelize(key);\n\n\t\tif (typeof value === 'undefined') {\n\t\t\tconst element = this.nodeType ? this : this[0];\n\t\t\tif (element) {\n\t\t\t\tval = element.style[key];\n\t\t\t\tif (val === '') {\n\t\t\t\t\tval = getComputedStyle(element)[key];\n\t\t\t\t}\n\t\t\t\treturn isNumeric(val) ? parseFloat(val) : val;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\n\t\tstyleProps = {};\n\t\tstyleProps[key] = value;\n\t} else {\n\t\tstyleProps = key;\n\t\tfor (prop in styleProps) {\n\t\t\tval = styleProps[prop];\n\t\t\tdelete styleProps[prop];\n\t\t\tstyleProps[camelize(prop)] = val;\n\t\t}\n\t}\n\n\teach(this, (element) => {\n\t\tfor (prop in styleProps) {\n\t\t\tif (styleProps[prop] || styleProps[prop] === 0) {\n\t\t\t\telement.style[prop] = styleProps[prop];\n\t\t\t} else {\n\t\t\t\telement.style.removeProperty(dasherize(prop));\n\t\t\t}\n\t\t}\n\t});\n\n\treturn this;\n};\n","/**\n * @module Attr\n */\n\nimport { each } from '../util';\n\n/**\n * Get the value of an attribute for the first element, or set one or more attributes for each element in the collection.\n *\n * @param {String|Object} key The name of the attribute to get or set. Or an object containing key-value pairs to set as attributes.\n * @param {String} [value] The value of the attribute to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').attr('attrName'); // get\n *     $('.item').attr('attrName', 'attrValue'); // set\n *     $('.item').attr({attr1: 'value1', 'attr-2': 'value2'}); // set multiple\n */\n\nexport const attr = function (key, value) {\n\tif (typeof key === 'string' && typeof value === 'undefined') {\n\t\tconst element = this.nodeType ? this : this[0];\n\t\treturn element ? element.getAttribute(key) : undefined;\n\t}\n\n\treturn each(this, (element) => {\n\t\tif (typeof key === 'object') {\n\t\t\tfor (const attr in key) {\n\t\t\t\telement.setAttribute(attr, key[attr]);\n\t\t\t}\n\t\t} else {\n\t\t\telement.setAttribute(key, value);\n\t\t}\n\t});\n};\n\n/**\n * Remove attribute from each element in the collection.\n *\n * @param {String} key Attribute name\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').removeAttr('attrName');\n */\n\nexport const removeAttr = function (key) {\n\treturn each(this, (element) => element.removeAttribute(key));\n};\n","/**\n * @module Class\n */\n\nimport { each } from '../util';\n\n/**\n * Add a class to the element(s)\n *\n * @param {String} value Space-separated class name(s) to add to the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').addClass('bar');\n *     $('.item').addClass('bar foo');\n */\n\nexport const addClass = function (value) {\n\tif (value && value.length) {\n\t\teach(value.split(' '), _each.bind(this, 'add'));\n\t}\n\treturn this;\n};\n\n/**\n * Remove a class from the element(s)\n *\n * @param {String} value Space-separated class name(s) to remove from the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').removeClass('bar');\n *     $('.items').removeClass('bar foo');\n */\n\nexport const removeClass = function (value) {\n\tif (value && value.length) {\n\t\teach(value.split(' '), _each.bind(this, 'remove'));\n\t}\n\treturn this;\n};\n\n/**\n * Toggle a class at the element(s)\n *\n * @param {String} value Space-separated class name(s) to toggle at the element(s).\n * @param {Boolean} [state] A Boolean value to determine whether the class should be added or removed.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').toggleClass('bar');\n *     $('.item').toggleClass('bar foo');\n *     $('.item').toggleClass('bar', true);\n */\n\nexport const toggleClass = function (value, state) {\n\tif (value && value.length) {\n\t\teach(value.split(' '), _each.bind(this, 'toggle'));\n\t}\n\treturn this;\n};\n\n/**\n * Check if the element(s) have a class.\n *\n * @param {String} value Check if the DOM element contains the class name. When applied to multiple elements,\n * returns `true` if _any_ of them contains the class name.\n * @return {Boolean} Whether the element's class attribute contains the class name.\n * @example\n *     $('.item').hasClass('bar');\n */\n\nexport const hasClass = function (value) {\n\treturn (this.nodeType ? [this] : this).some((element) => element.classList.contains(value));\n};\n\n/**\n * Specialized iteration, applying `fn` of the classList API to each element.\n *\n * @param {String} fnName\n * @param {String} className\n * @private\n */\n\nconst _each = function (fnName, className) {\n\treturn each(this, (element) => element.classList[fnName](className));\n};\n","/**\n * @module contains\n */\n\n/**\n * Test whether an element contains another element in the DOM.\n *\n * @param {Element} container The element that may contain the other element.\n * @param {Element} element The element that may be a descendant of the other element.\n * @return {Boolean} Whether the `container` element contains the `element`.\n * @example\n *     $.contains(parentElement, childElement); // true/false\n */\n\nexport const contains = (container, element) => {\n\tif (!container || !element || container === element) {\n\t\treturn false;\n\t} else if (container.contains) {\n\t\treturn container.contains(element);\n\t} else if (container.compareDocumentPosition) {\n\t\treturn !(container.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_DISCONNECTED);\n\t}\n\treturn false;\n};\n","/**\n * @module Data\n */\n\nimport { each } from '../util';\n\nconst isSupportsDataSet = typeof document !== 'undefined' && 'dataset' in document.documentElement;\nconst DATAKEYPROP = isSupportsDataSet ? 'dataset' : '__DOMTASTIC_DATA__';\n\nconst camelize = (str) => str.replace(/-+(.)?/g, (match, char) => char ? char.toUpperCase() : '');\n\n/**\n * Get data from first element, or set data for each element in the collection.\n *\n * @param {String} key The key for the data to get or set.\n * @param {String} [value] The data to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').data('attrName'); // get\n *     $('.item').data('attrName', {any: 'data'}); // set\n */\n\nexport const data = function (key, value) {\n\tif (typeof key === 'string' && typeof value === 'undefined') {\n\t\tconst element = this.nodeType ? this : this[0];\n\t\treturn element && DATAKEYPROP in element ? element[DATAKEYPROP][camelize(key)] : undefined;\n\t}\n\n\treturn each(this, (element) => {\n\t\tif (!isSupportsDataSet) {\n\t\t\telement[DATAKEYPROP] = element[DATAKEYPROP] || {};\n\t\t}\n\n\t\telement[DATAKEYPROP][camelize(key)] = value;\n\t});\n};\n\n/**\n * Get property from first element, or set property on each element in the collection.\n *\n * @param {String} key The name of the property to get or set.\n * @param {String} [value] The value of the property to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').prop('attrName'); // get\n *     $('.item').prop('attrName', 'attrValue'); // set\n */\n\nexport const prop = function (key, value) {\n\tif (typeof key === 'string' && typeof value === 'undefined') {\n\t\tconst element = this.nodeType ? this : this[0];\n\t\treturn element && element ? element[key] : undefined;\n\t}\n\n\treturn each(this, (element) => element[key] = value);\n};\n","/**\n * @module DOM\n */\n\nimport { $ } from '../selector/index';\nimport { toArray } from '../util';\n\nconst forEach = Array.prototype.forEach;\n\n/**\n * Append element(s) to each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to append to the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').append('<p>more</p>');\n */\n\nexport const append = function (element) {\n\tif (this instanceof Node) {\n\t\tif (typeof element === 'string') {\n\t\t\tthis.insertAdjacentHTML('beforeend', element);\n\t\t} else if (element instanceof Node) {\n\t\t\tthis.appendChild(element);\n\t\t} else {\n\t\t\tconst elements = element instanceof NodeList ? toArray(element) : element;\n\t\t\tforEach.call(elements, this.appendChild.bind(this));\n\t\t}\n\t} else {\n\t\t_each(this, append, element);\n\t}\n\treturn this;\n};\n\n/**\n * Place element(s) at the beginning of each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place at the beginning of the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').prepend('<span>start</span>');\n */\n\nexport const prepend = function (element) {\n\tif (this instanceof Node) {\n\t\tif (typeof element === 'string') {\n\t\t\tthis.insertAdjacentHTML('afterbegin', element);\n\t\t} else if (element instanceof Node) {\n\t\t\tthis.insertBefore(element, this.firstChild);\n\t\t} else {\n\t\t\tconst elements = element instanceof NodeList ? toArray(element) : element;\n\t\t\tforEach.call(elements.reverse(), prepend.bind(this));\n\t\t}\n\t} else {\n\t\t_each(this, prepend, element);\n\t}\n\treturn this;\n};\n\n/**\n * Place element(s) before each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place as sibling(s) before to the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').before('<p>prefix</p>');\n */\n\nexport const before = function (element) {\n\tif (this instanceof Node) {\n\t\tif (typeof element === 'string') {\n\t\t\tthis.insertAdjacentHTML('beforebegin', element);\n\t\t} else if (element instanceof Node) {\n\t\t\tthis.parentNode.insertBefore(element, this);\n\t\t} else {\n\t\t\tconst elements = element instanceof NodeList ? toArray(element) : element;\n\t\t\tforEach.call(elements, before.bind(this));\n\t\t}\n\t} else {\n\t\t_each(this, before, element);\n\t}\n\treturn this;\n};\n\n/**\n * Place element(s) after each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place as sibling(s) after to the element(s). Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').after('<span>suf</span><span>fix</span>');\n */\n\nexport const after = function (element) {\n\tif (this instanceof Node) {\n\t\tif (typeof element === 'string') {\n\t\t\tthis.insertAdjacentHTML('afterend', element);\n\t\t} else if (element instanceof Node) {\n\t\t\tthis.parentNode.insertBefore(element, this.nextSibling);\n\t\t} else {\n\t\t\tconst elements = element instanceof NodeList ? toArray(element) : element;\n\t\t\tforEach.call(elements.reverse(), after.bind(this));\n\t\t}\n\t} else {\n\t\t_each(this, after, element);\n\t}\n\treturn this;\n};\n\n/**\n * Clone a wrapped object.\n *\n * @return {Object} Wrapped collection of cloned nodes.\n * @example\n *     $(element).clone();\n */\n\nexport const clone = function () {\n\treturn $(_clone(this));\n};\n\n/**\n * Clone an object\n *\n * @param {String|Node|NodeList|Array} element The element(s) to clone.\n * @return {String|Node|NodeList|Array} The cloned element(s)\n * @private\n */\n\nexport const _clone = (element) => {\n\tif (typeof element === 'string') {\n\t\treturn element;\n\t} else if (element instanceof Node) {\n\t\treturn element.cloneNode(true);\n\t} else if ('length' in element) {\n\t\treturn [].map.call(element, (el) => el.cloneNode(true));\n\t}\n\treturn element;\n};\n\n/**\n * Specialized iteration, applying `fn` in reversed manner to a clone of each element, but the provided one.\n *\n * @param {NodeList|Array} collection\n * @param {Function} fn\n * @param {Node} element\n * @private\n */\n\nexport const _each = (collection, fn, element) => {\n\tlet l = collection.length;\n\twhile (l--) {\n\t\tconst elm = l === 0 ? element : _clone(element);\n\t\tfn.call(collection[l], elm);\n\t}\n};\n","/**\n * @module DOM (extra)\n */\n\nimport { $ } from '../selector/index';\nimport { each } from '../util';\nimport { append } from './index';\n\n/**\n * Append each element in the collection to the specified element(s).\n *\n * @param {Node|NodeList|Object} element What to append the element(s) to. Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').appendTo(container);\n */\n\nexport const appendTo = function (element) {\n\tconst context = typeof element === 'string' ? $(element) : element;\n\tappend.call(context, this);\n\treturn this;\n};\n\n/**\n * Empty each element in the collection.\n *\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').empty();\n */\n\nexport const empty = function () {\n\treturn each(this, (element) => element.innerHTML = '');\n};\n\n/**\n * Remove the collection from the DOM.\n *\n * @return {Array} Array containing the removed elements\n * @example\n *     $('.item').remove();\n */\n\nexport const remove = function () {\n\treturn each(this, (element) => {\n\t\tif (element.parentNode) {\n\t\t\telement.parentNode.removeChild(element);\n\t\t}\n\t});\n};\n\n/**\n * Get the `textContent` from the first, or set the `textContent` of each element in the collection.\n *\n * @param {String} [value]\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').text('New content');\n */\n\nexport const text = function (value) {\n\tif (value === undefined) {\n\t\treturn this[0].textContent;\n\t}\n\n\treturn each(this, (element) => element.textContent = String(value));\n};\n\n/**\n * Get the `value` from the first, or set the `value` of each element in the collection.\n *\n * @param {String} [value]\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('input.firstName').val('New value');\n */\n\nexport const val = function (value) {\n\tif (value === undefined) {\n\t\treturn this.length > 0 ? this[0].value : undefined;\n\t}\n\n\treturn each(this, (element) => element.value = value);\n};\n","/**\n * @module HTML\n */\n\nimport { each } from '../util';\n\n/**\n * Get the HTML contents of the first element, or set the HTML contents for each element in the collection.\n *\n * @param {String} [fragment] HTML fragment to set for the element. If this argument is omitted, the HTML contents are returned.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').html();\n *     $('.item').html('<span>more</span>');\n */\n\nexport const html = function (fragment) {\n\tif (fragment === undefined) {\n\t\tconst element = this.nodeType ? this : this[0];\n\t\treturn element ? element.innerHTML : undefined;\n\t}\n\n\treturn each(this, (element) => element.innerHTML = fragment);\n};\n","/**\n * @module closest\n */\n\nimport { each, uniq } from '../util';\nimport { $, matches } from './index';\n\n/**\n * Return the closest element matching the selector (starting by itself) for each element in the collection.\n *\n * @param {String} selector Filter\n * @param {Object} [context] If provided, matching elements must be a descendant of this element\n * @return {Object} New wrapped collection (containing zero or one element)\n * @chainable\n * @example\n *     $('.selector').closest('.container');\n */\n\nexport const closest = (() => {\n\tconst closest = function (selector, context) {\n\t\tconst nodes = [];\n\t\teach(this, (node) => {\n\t\t\twhile (node && node !== context) {\n\t\t\t\tif (matches(node, selector)) {\n\t\t\t\t\tnodes.push(node);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnode = node.parentElement;\n\t\t\t}\n\t\t});\n\t\treturn $(uniq(nodes));\n\t};\n\n\treturn typeof Element === 'undefined' || !Element.prototype.closest ? closest : function (selector, context) {\n\t\tif (!context) {\n\t\t\tconst nodes = [];\n\t\t\teach(this, (node) => {\n\t\t\t\tconst n = node.closest(selector);\n\t\t\t\tif (n) {\n\t\t\t\t\tnodes.push(n);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn $(uniq(nodes));\n\t\t}\n\t\treturn closest.call(this, selector, context);\n\t};\n})();\n","/**\n * @module Events\n */\n\nimport { closest } from '../selector/closest';\nimport { each } from '../util';\n\n/**\n * Shorthand for `addEventListener`. Supports event delegation if a filter (`selector`) is provided.\n *\n * @param {String} eventNames List of space-separated event types to be added to the element(s)\n * @param {String} [selector] Selector to filter descendants that delegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Boolean} useCapture=false\n * @param {Boolean} once=false\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').on('click', callback);\n *     $('.container').on('click focus', '.item', handler);\n */\n\nexport const on = function (eventNames, selector, handler, useCapture, once) {\n\tif (typeof selector === 'function') {\n\t\thandler = selector;\n\t\tselector = null;\n\t}\n\n\tlet eventListener;\n\tlet namespace;\n\tlet parts;\n\n\teventNames.split(' ').forEach((eventName) => {\n\t\tparts = eventName.split('.');\n\t\teventName = parts[0] || null;\n\t\tnamespace = parts[1] || null;\n\n\t\teventListener = proxyHandler(handler);\n\n\t\teach(this, (element) => {\n\t\t\tif (selector) {\n\t\t\t\teventListener = delegateHandler.bind(element, selector, eventListener);\n\t\t\t}\n\n\t\t\tif (once) {\n\t\t\t\tconst listener = eventListener;\n\t\t\t\teventListener = (event) => {\n\t\t\t\t\toff.call(element, eventNames, selector, handler, useCapture);\n\t\t\t\t\tlistener.call(element, event);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\telement.addEventListener(eventName, eventListener, useCapture || false);\n\n\t\t\tgetHandlers(element).push({\n\t\t\t\teventName,\n\t\t\t\thandler,\n\t\t\t\teventListener,\n\t\t\t\tselector,\n\t\t\t\tnamespace\n\t\t\t});\n\t\t});\n\t}, this);\n\n\treturn this;\n};\n\n/**\n * Shorthand for `removeEventListener`.\n *\n * @param {String} eventNames List of space-separated event types to be removed from the element(s)\n * @param {String} [selector] Selector to filter descendants that undelegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Boolean} useCapture=false\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').off('click', callback);\n *     $('#my-element').off('myEvent myOtherEvent');\n *     $('.item').off();\n */\n\nexport const off = function (eventNames = '', selector, handler, useCapture) {\n\tif (typeof selector === 'function') {\n\t\thandler = selector;\n\t\tselector = null;\n\t}\n\n\tlet handlers;\n\tlet namespace;\n\tlet parts;\n\n\teventNames.split(' ').forEach((eventName) => {\n\t\tparts = eventName.split('.');\n\t\teventName = parts[0] || null;\n\t\tnamespace = parts[1] || null;\n\n\t\treturn each(this, (element) => {\n\t\t\thandlers = getHandlers(element);\n\n\t\t\teach(handlers.filter((item) =>\n\t\t\t\t(!eventName || item.eventName === eventName) &&\n\t\t\t\t(!namespace || item.namespace === namespace) &&\n\t\t\t\t(!handler || item.handler === handler) &&\n\t\t\t\t(!selector || item.selector === selector)\n\t\t\t), (item) => {\n\t\t\t\telement.removeEventListener(item.eventName, item.eventListener, useCapture || false);\n\t\t\t\thandlers.splice(handlers.indexOf(item), 1);\n\t\t\t});\n\n\t\t\tif (!eventName && !namespace && !selector && !handler) {\n\t\t\t\tclearHandlers(element);\n\t\t\t} else if (handlers.length === 0) {\n\t\t\t\tclearHandlers(element);\n\t\t\t}\n\t\t});\n\t}, this);\n\n\treturn this;\n};\n\n/**\n * Get event handlers from an element\n *\n * @private\n * @param {Node} element\n * @return {Array}\n */\n\nconst eventKeyProp = '__domtastic_event__';\nlet id = 1;\nconst handlers = {};\nconst unusedKeys = [];\n\nexport const getHandlers = (element) => {\n\tif (!element[eventKeyProp]) {\n\t\telement[eventKeyProp] = unusedKeys.length === 0 ? ++id : unusedKeys.pop();\n\t}\n\tconst key = element[eventKeyProp];\n\treturn handlers[key] || (handlers[key] = []);\n};\n\n/**\n * Clear event handlers for an element\n *\n * @private\n * @param {Node} element\n */\n\nexport const clearHandlers = (element) => {\n\tconst key = element[eventKeyProp];\n\tif (handlers[key]) {\n\t\thandlers[key] = null;\n\t\telement[eventKeyProp] = null;\n\t\tunusedKeys.push(key);\n\t}\n};\n\n/**\n * Function to create a handler that augments the event object with some extra methods,\n * and executes the callback with the event and the event data (i.e. `event.detail`).\n *\n * @private\n * @param handler Callback to execute as `handler(event, data)`\n * @return {Function}\n */\n\nexport const proxyHandler = (handler) => function (event) {\n\treturn handler.call(this, augmentEvent(event));\n};\n\nconst eventMethods = {\n\tpreventDefault: 'isDefaultPrevented',\n\tstopImmediatePropagation: 'isImmediatePropagationStopped',\n\tstopPropagation: 'isPropagationStopped'\n};\nconst returnTrue = () => true;\nconst returnFalse = () => false;\n\n/**\n * Attempt to augment events and implement something closer to DOM Level 3 Events.\n *\n * @private\n * @param {Object} event\n * @return {Function}\n */\n\nconst augmentEvent = (event) => {\n\tif (!event.isDefaultPrevented || event.stopImmediatePropagation || event.stopPropagation) {\n\t\tfor (const methodName in eventMethods) {\n\t\t\t(function (methodName, testMethodName, originalMethod) {\n\t\t\t\tevent[methodName] = function () {\n\t\t\t\t\tthis[testMethodName] = returnTrue;\n\t\t\t\t\treturn originalMethod && originalMethod.apply(this, arguments);\n\t\t\t\t};\n\t\t\t\tevent[testMethodName] = returnFalse;\n\t\t\t}(methodName, eventMethods[methodName], event[methodName]));\n\t\t}\n\t\tif (event._preventDefault) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\treturn event;\n};\n\n/**\n * Function to test whether delegated events match the provided `selector` (filter),\n * if the event propagation was stopped, and then actually call the provided event handler.\n * Use `this` instead of `event.currentTarget` on the event object.\n *\n * @private\n * @param {String} selector Selector to filter descendants that undelegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Event} event\n */\n\nexport const delegateHandler = function (selector, handler, event) {\n\tconst eventTarget = event._target || event.target;\n\tconst currentTarget = closest.call([eventTarget], selector, this)[0];\n\tif (currentTarget && currentTarget !== this) {\n\t\tif (currentTarget === eventTarget || !(event.isPropagationStopped && event.isPropagationStopped())) {\n\t\t\thandler.call(currentTarget, event);\n\t\t}\n\t}\n};\n","/**\n * @module Ready\n */\n\n/**\n * Execute callback when `DOMContentLoaded` fires for `document`, or immediately if called afterwards.\n *\n * @param handler Callback to execute when initial DOM content is loaded.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $(document).ready(callback);\n */\n\nexport const ready = function (handler) {\n\tif (/complete|loaded|interactive/.test(document.readyState) && document.body) {\n\t\thandler();\n\t} else {\n\t\tdocument.addEventListener('DOMContentLoaded', handler, false);\n\t}\n\treturn this;\n};\n","/**\n * @module trigger\n */\n\nimport { contains } from '../dom/contains';\nimport { each, win } from '../util';\n\nconst reMouseEvent = /^(mouse(down|up|over|out|enter|leave|move)|contextmenu|(dbl)?click)$/;\nconst reKeyEvent = /^key(down|press|up)$/;\n\n/**\n * Trigger event at element(s)\n *\n * @param {String} type Type of the event\n * @param {Object} data Data to be sent with the event (`params.detail` will be set to this).\n * @param {Object} [params] Event parameters (optional)\n * @param {Boolean} params.bubbles=true Does the event bubble up through the DOM or not.\n * @param {Boolean} params.cancelable=true Is the event cancelable or not.\n * @param {Mixed} params.detail=undefined Additional information about the event.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').trigger('anyEventType');\n */\n\nexport const trigger = function (type, data, {\n\tbubbles = true, cancelable = true, preventDefault = false\n} = {}) {\n\tconst EventConstructor = getEventConstructor(type);\n\tconst event = new EventConstructor(type, {\n\t\tbubbles,\n\t\tcancelable,\n\t\tpreventDefault,\n\t\tdetail: data\n\t});\n\n\tevent._preventDefault = preventDefault;\n\n\treturn each(this, (element) => {\n\t\tif (!bubbles || isEventBubblingInDetachedTree || isAttachedToDocument(element)) {\n\t\t\tdispatchEvent(element, event);\n\t\t} else {\n\t\t\ttriggerForPath(element, type, {\n\t\t\t\tbubbles,\n\t\t\t\tcancelable,\n\t\t\t\tpreventDefault,\n\t\t\t\tdetail: data\n\t\t\t});\n\t\t}\n\t});\n};\n\nconst getEventConstructor = (type) => isSupportsOtherEventConstructors ? reMouseEvent.test(type) ? MouseEvent : reKeyEvent.test(type) ? KeyboardEvent : CustomEvent : CustomEvent;\n\n/**\n * Trigger event at first element in the collection. Similar to `trigger()`, except:\n *\n * - Event does not bubble\n * - Default event behavior is prevented\n * - Only triggers handler for first matching element\n *\n * @param {String} type Type of the event\n * @param {Object} data Data to be sent with the event\n * @example\n *     $('form').triggerHandler('submit');\n */\n\nexport const triggerHandler = function (type, data) {\n\tif (this[0]) {\n\t\ttrigger.call(this[0], type, data, { bubbles: false,\n\t\t\tpreventDefault: true });\n\t}\n};\n\n/**\n * Check whether the element is attached to or detached from) the document\n *\n * @private\n * @param {Node} element Element to test\n * @return {Boolean}\n */\n\nconst isAttachedToDocument = (element) => {\n\tif (element === window || element === document) {\n\t\treturn true;\n\t}\n\treturn contains(element.ownerDocument.documentElement, element);\n};\n\n/**\n * Dispatch the event at the element and its ancestors.\n * Required to support delegated events in browsers that don't bubble events in detached DOM trees.\n *\n * @private\n * @param {Node} element First element to dispatch the event at\n * @param {String} type Type of the event\n * @param {Object} [params] Event parameters (optional)\n * @param {Boolean} params.bubbles=true Does the event bubble up through the DOM or not.\n * Will be set to false (but shouldn't matter since events don't bubble anyway).\n * @param {Boolean} params.cancelable=true Is the event cancelable or not.\n * @param {Mixed} params.detail=undefined Additional information about the event.\n */\n\nconst triggerForPath = (element, type, params = {}) => {\n\tparams.bubbles = false;\n\tconst event = new CustomEvent(type, params);\n\tevent._target = element;\n\tdo {\n\t\tdispatchEvent(element, event);\n\t} while (element = element.parentNode); // eslint-disable-line no-cond-assign\n};\n\n/**\n * Dispatch event to element, but call direct event methods instead if available\n * (e.g. \"blur()\", \"submit()\") and if the event is non-cancelable.\n *\n * @private\n * @param {Node} element Element to dispatch the event at\n * @param {Object} event Event to dispatch\n */\n\nconst directEventMethods = ['blur', 'focus', 'select', 'submit'];\n\nconst dispatchEvent = (element, event) => {\n\tif (directEventMethods.indexOf(event.type) !== -1 && typeof element[event.type] === 'function' && !event._preventDefault && !event.cancelable) {\n\t\telement[event.type]();\n\t} else {\n\t\telement.dispatchEvent(event);\n\t}\n};\n\n/**\n * Polyfill for CustomEvent, borrowed from [MDN](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent#Polyfill).\n * Needed to support IE (9, 10, 11) & PhantomJS\n */\n\n(() => {\n\tconst CustomEvent = function (event, params = {\n\t\tbubbles: false,\n\t\tcancelable: false,\n\t\tdetail: undefined\n\t}) {\n\t\tconst customEvent = document.createEvent('CustomEvent');\n\t\tcustomEvent.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n\t\treturn customEvent;\n\t};\n\n\tCustomEvent.prototype = win.CustomEvent && win.CustomEvent.prototype;\n\twin.CustomEvent = CustomEvent;\n})();\n\n/*\n * Are events bubbling in detached DOM trees?\n * @private\n */\n\nconst isEventBubblingInDetachedTree = (() => {\n\tlet isBubbling = false;\n\tconst doc = win.document;\n\tif (doc) {\n\t\tconst parent = doc.createElement('div');\n\t\tconst child = parent.cloneNode();\n\t\tparent.appendChild(child);\n\t\tparent.addEventListener('e', () => {\n\t\t\tisBubbling = true;\n\t\t});\n\t\tchild.dispatchEvent(new CustomEvent('e', { bubbles: true }));\n\t}\n\treturn isBubbling;\n})();\n\nconst isSupportsOtherEventConstructors = (() => {\n\ttry {\n\t\tnew MouseEvent('click');\n\t} catch (e) {\n\t\treturn false;\n\t}\n\treturn true;\n})();\n","/**\n * @module Selector (extra)\n */\n\nimport { each } from '../util';\nimport { $, matches } from './index';\n\n/**\n * Return children of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').children();\n *     $('.selector').children('.filter');\n */\n\nexport const children = function (selector) {\n\tconst nodes = [];\n\teach(this, (element) => {\n\t\tif (element.children) {\n\t\t\teach(element.children, (child) => {\n\t\t\t\tif (!selector || selector && matches(child, selector)) {\n\t\t\t\t\tnodes.push(child);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\treturn $(nodes);\n};\n\n/**\n * Return a collection containing only the one at the specified index.\n *\n * @param {Number} index\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.items').eq(1)\n *     // The second item; result is the same as doing $($('.items')[1]);\n */\n\nexport const eq = function (index) {\n\treturn slice.call(this, index, index + 1);\n};\n\n/**\n * Return a collection containing only the first item.\n *\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.items').first()\n *     // The first item; result is the same as doing $($('.items')[0]);\n */\n\nexport const first = function () {\n\treturn slice.call(this, 0, 1);\n};\n\n/**\n * Return the DOM element at the specified index.\n *\n * @param {Number} index\n * @return {Node} Element at the specified index\n * @example\n *     $('.items').get(1)\n *     // The second element; result is the same as doing $('.items')[1];\n */\n\nexport const get = function (index) {\n\treturn this[index];\n};\n\n/**\n * Return the parent elements of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').parent();\n *     $('.selector').parent('.filter');\n */\n\nexport const parent = function (selector) {\n\tconst nodes = [];\n\teach(this, (element) => {\n\t\tif (!selector || selector && matches(element.parentNode, selector)) {\n\t\t\tnodes.push(element.parentNode);\n\t\t}\n\t});\n\treturn $(nodes);\n};\n\n/**\n * Create a new, sliced collection.\n *\n * @param {Number} start\n * @param {Number} end\n * @return {Object} New wrapped collection\n * @example\n *     $('.items').slice(1, 3)\n *     // New wrapped collection containing the second, third, and fourth element.\n */\n\nexport const slice = function (start, end) { // eslint-disable-line no-unused-vars\n\treturn $([].slice.apply(this, arguments));\n};\n","/**\n * @module Type\n */\n\n/**\n * Determine if the argument passed is a Javascript function object.\n *\n * @param {Object} [obj] Object to test whether or not it is a function.\n * @return {boolean}\n * @example\n *     $.isFunction(function(){}); // true\n * @example\n *     $.isFunction({}); // false\n */\n\nexport const isFunction = (obj) => typeof obj === 'function';\n\n/**\n * Determine whether the argument is an array.\n *\n * @param {Object} [obj] Object to test whether or not it is an array.\n * @return {boolean}\n * @example\n *     $.isArray([]); // true\n * @example\n *     $.isArray({}); // false\n */\n\nexport const isArray = Array.isArray;\n","/**\n * @module API\n */\n\n// Import modules to build up the API\nimport * as array from './array';\nimport BaseClass from './baseClass';\nimport * as css from './css';\nimport * as dom_attr from './dom/attr';\nimport * as dom_class from './dom/class';\nimport * as dom_contains from './dom/contains';\nimport * as dom_data from './dom/data';\nimport * as dom_extra from './dom/extra';\nimport * as dom_html from './dom/html';\nimport * as dom from './dom/index';\nimport * as event from './event/index';\nimport * as event_ready from './event/ready';\nimport * as event_trigger from './event/trigger';\nimport * as selector_closest from './selector/closest';\nimport * as selector_extra from './selector/extra';\nimport * as selector from './selector/index';\nimport * as type from './type';\nimport { extend } from './util';\n\nconst api = {};\nlet $ = {};\n\nif (typeof selector !== 'undefined') {\n\t$ = selector.$;\n\t$.matches = selector.matches;\n\tapi.find = selector.find;\n}\n\nextend($, dom_contains, type);\nextend(api, array, css, dom_attr, dom, dom_class, dom_data, dom_extra, dom_html, event, event_trigger, event_ready, selector_closest, selector_extra);\n\n$.fn = api;\n\n// Version\n$.version = '__VERSION__';\n\n// Util\n$.extend = extend;\n\n// Provide base class to extend from\nif (typeof BaseClass !== 'undefined') {\n\t$.BaseClass = BaseClass($.fn);\n}\n\n// Export interface\nexport default $;\n"],"names":["context","_matches","win","window","toArray","collection","length","result","Array","i","each","callback","thisArg","undefined","nodeType","call","extend","target","sources","forEach","src","prop","uniq","filter","item","index","indexOf","isPrototypeSet","reFragment","reSingleTag","reSimpleSelector","$","selector","document","DOMtastic","test","createFragment","querySelector","querySelectorAll","wrap","find","nodes","this","node","child","push","matches","Element","prototype","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","element","getElementById","slice","getElementsByClassName","getElementsByTagName","html","createElement","RegExp","$1","elements","container","children","childNodes","innerHTML","l","fn","constructor","ArrayProto","every","_each","map","pop","reduce","reduceRight","shift","some","unshift","reverse","api","BaseClass","arguments","camelize","value","replace","letter","toUpperCase","key","styleProps","val","style","getComputedStyle","isNaN","parseFloat","isFinite","isNumeric","removeProperty","toLowerCase","getAttribute","attr","setAttribute","removeAttribute","fnName","className","classList","split","bind","state","contains","compareDocumentPosition","Node","DOCUMENT_POSITION_DISCONNECTED","isSupportsDataSet","documentElement","DATAKEYPROP","str","match","char","append","insertAdjacentHTML","appendChild","NodeList","_clone","cloneNode","el","elm","prepend","insertBefore","firstChild","before","parentNode","after","nextSibling","removeChild","textContent","String","fragment","closest","parentElement","n","off","eventNames","handler","useCapture","handlers","namespace","parts","eventName","_this2","getHandlers","removeEventListener","eventListener","splice","clearHandlers","eventKeyProp","id","unusedKeys","proxyHandler","event","augmentEvent","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","returnTrue","returnFalse","isDefaultPrevented","methodName","testMethodName","originalMethod","apply","_preventDefault","delegateHandler","eventTarget","_target","currentTarget","isPropagationStopped","once","_this","listener","addEventListener","readyState","body","reMouseEvent","reKeyEvent","trigger","type","data","bubbles","cancelable","getEventConstructor","detail","isEventBubblingInDetachedTree","isAttachedToDocument","dispatchEvent","triggerForPath","isSupportsOtherEventConstructors","MouseEvent","KeyboardEvent","CustomEvent","ownerDocument","params","directEventMethods","customEvent","createEvent","initCustomEvent","isBubbling","doc","parent","e","start","end","isArray","obj","dom_contains","array","css","dom_attr","dom","dom_class","dom_data","dom_extra","dom_html","event_trigger","event_ready","selector_closest","selector_extra","version"],"mappings":"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"}